#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 59 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 555 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;problem 1"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 15 #" (flu-activity "
0 0 43 3 5 #"level"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 3 #"and"
0 0 43 3 2 #" ("
0 0 43 3 2 #">="
0 0 43 3 11 #" level 1) ("
0 0 43 3 2 #"<="
0 0 43 3 20 #" level 3))\"minimal\"]"
0 0 43 29 1 #"\n"
0 0 43 3 10 #"        [("
0 0 43 3 2 #"<="
0 0 43 3 16 #" level 5) \"low\"]"
0 0 43 29 1 #"\n"
0 0 43 3 10 #"        [("
0 0 43 3 2 #"<="
0 0 43 3 21 #" level 7) \"moderate\"]"
0 0 43 29 1 #"\n"
0 0 43 3 10 #"        [("
0 0 43 3 2 #"<="
0 0 43 3 20 #" level 10) \"high\"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 28 #" (flu-activity 2) \"minimal\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 24 #" (flu-activity 4) \"low\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 29 #" (flu-activity 7) \"moderate\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 25 #" (flu-activity 8) \"high\")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;problem 2"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 4 #" (A "
0 0 43 3 1 #"x"
0 0 43 3 2 #") "
0 0 43 29 1 #"\n"
0 0 43 3 4 #"   ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 1 #"="
0 0 43 3 2 #" ("
0 0 43 3 1 #"-"
0 0 43 3 2 #" ("
0 0 43 3 1 #"*"
0 0 43 3 19 #" 8 x) 2) 14) \"Yes\"]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 8 #" \"No\"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 4 #" (B "
0 0 43 3 1 #"x"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 2 #"[("
0 0 43 3 1 #"="
0 0 43 3 2 #" ("
0 0 43 3 1 #"-"
0 0 43 3 2 #" ("
0 0 43 3 1 #"*"
0 0 43 3 11 #" 10 x) 6) ("
0 0 43 3 1 #"+"
0 0 43 3 2 #" ("
0 0 43 3 1 #"*"
0 0 43 3 16 #" 7 x) 9)) \"Yes\"]"
0 0 43 29 1 #"\n"
0 0 43 3 8 #"       ["
0 0 43 3 4 #"else"
0 0 43 3 8 #" \"No\"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 4 #" (C "
0 0 43 3 1 #"x"
0 0 43 3 2 #") "
0 0 43 29 1 #"\n"
0 0 43 3 4 #"   ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 1 #"="
0 0 43 3 2 #" ("
0 0 43 3 1 #"-"
0 0 43 3 4 #" 2 ("
0 0 43 3 1 #"/"
0 0 43 3 19 #" -12 x)) -4) \"Yes\"]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 8 #" \"No\"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 13 #" (A 2) \"Yes\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 12 #" (A 3) \"No\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 13 #" (B 5) \"Yes\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 13 #" (B 10) \"No\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 14 #" (C -2) \"Yes\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 12 #" (C 7) \"No\")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;problem 3"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 9 #" (input1 "
0 0 43 3 1 #"x"
0 0 43 3 2 #") "
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 3 #"and"
0 0 43 3 2 #" ("
0 0 43 3 2 #">="
0 0 43 3 7 #" x 4) ("
0 0 43 3 1 #"<"
0 0 43 3 15 #" x 16)) \"true\"]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 11 #" \"false\"]))"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 21 #" (input1 16) \"false\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 19 #" (input1 4) \"true\")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 9 #" (input2 "
0 0 43 3 1 #"x"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 2 #"or"
0 0 43 3 2 #" ("
0 0 43 3 3 #"and"
0 0 43 3 2 #" ("
0 0 43 3 1 #">"
0 0 43 3 8 #" x 20) ("
0 0 43 3 1 #"<"
0 0 43 3 9 #" x 30)) ("
0 0 43 3 3 #"and"
0 0 43 3 2 #" ("
0 0 43 3 1 #">"
0 0 43 3 8 #" x 40) ("
0 0 43 3 1 #"<"
0 0 43 3 16 #" x 50))) \"true\"]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 11 #" \"false\"]))"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 20 #" (input2 21) \"true\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 20 #" (input2 48) \"true\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 20 #" (input2 22) \"true\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 20 #" (input2 1) \"false\")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 9 #" (input3 "
0 0 43 3 1 #"x"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 3 #"not"
0 0 43 3 2 #" ("
0 0 43 3 3 #"and"
0 0 43 3 2 #" ("
0 0 43 3 2 #">="
0 0 43 3 8 #" x 40) ("
0 0 43 3 2 #"<="
0 0 43 3 16 #" x 60))) \"true\"]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 11 #" \"false\"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 21 #" (input3 45) \"false\")"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 12 #"check-expect"
0 0 43 3 21 #" (input3 120) \"true\")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;prbblem 4"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 13 #" (happygauge "
0 0 43 3 1 #"k"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 2 #"<="
0 0 43 3 11 #" 0 k 100) ("
0 0 43 3 1 #"-"
0 0 43 3 8 #" k 0.1)]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 1 #" "
0 0 45 3 1 #"k"
0 0 43 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 14 #" (happychange "
0 0 43 3 1 #"k"
0 0 43 3 1 #" "
0 0 43 3 3 #"key"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 5 #"key=?"
0 0 43 3 12 #" key \"up\") ("
0 0 43 3 1 #"+"
0 0 43 3 4 #" k ("
0 0 43 3 1 #"/"
0 0 43 3 7 #" 1 3))]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 45 3 1 #"("
0 0 45 3 5 #"key=?"
0 0 45 3 12 #" key \"down\")"
0 0 43 3 1 #" "
0 0 45 3 1 #"("
0 0 45 3 1 #"-"
0 0 45 3 4 #" k ("
0 0 45 3 1 #"/"
0 0 45 3 6 #" 1 5))"
0 0 43 3 1 #"]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 1 #" "
0 0 45 3 1 #"k"
0 0 43 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 17 #" (happygauge->de "
0 0 43 3 1 #"k"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 11 #"place-image"
0 0 43 3 2 #" ("
0 0 43 3 9 #"rectangle"
0 0 43 3 2 #" ("
0 0 43 3 1 #"*"
0 0 43 3 7 #" 4 k) ("
0 0 43 3 1 #"*"
0 0 43 3 30 #" 6 k) \"solid\" \"red\") 200 300 ("
0 0 43 3 11 #"empty-scene"
0 0 43 3 11 #" 400 600)))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 23 3 1 #" "
0 0 43 3 3 #"100"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 10 #"happygauge"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 14 #"happygauge->de"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 6 #"on-key"
0 0 23 3 1 #" "
0 0 14 3 11 #"happychange"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;problem 5"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";;a"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 15 #" (graws->image "
0 0 43 3 1 #"t"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 11 #"place-image"
0 0 43 3 2 #" ("
0 0 43 3 4 #"text"
0 0 43 3 33 #" \"Hello World\" t \"red\") 250 150 ("
0 0 43 3 11 #"empty-scene"
0 0 43 3 11 #" 500 300)))"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 15 #" (graws->graws "
0 0 43 3 1 #"t"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 2 #"<="
0 0 43 3 10 #" 1 t 80) ("
0 0 43 3 1 #"+"
0 0 43 3 6 #" t 1)]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 45 3 1 #"("
0 0 45 3 1 #">"
0 0 45 3 6 #" t 80)"
0 0 43 3 1 #" "
0 0 45 3 1 #"("
0 0 45 3 1 #"+"
0 0 45 3 5 #" t 0)"
0 0 43 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 23 3 1 #" "
0 0 43 3 1 #"1"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 12 #"graws->image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 12 #"graws->graws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";;b"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 13 #" (graws->ima "
0 0 43 3 1 #"a"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 11 #"place-image"
0 0 43 3 2 #" ("
0 0 43 3 4 #"text"
0 0 43 3 33 #" \"Hello World\" a \"red\") 250 150 ("
0 0 43 3 11 #"empty-scene"
0 0 43 3 11 #" 500 300)))"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 12 #" (graws->gr "
0 0 43 3 1 #"a"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 2 #"<="
0 0 43 3 10 #" 1 a 80) ("
0 0 43 3 1 #"+"
0 0 43 3 6 #" a 1)]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 45 3 1 #"("
0 0 45 3 1 #">"
0 0 45 3 6 #" a 80)"
0 0 43 3 1 #" "
0 0 45 3 1 #"("
0 0 45 3 1 #"+"
0 0 45 3 5 #" a 0)"
0 0 43 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 43 3 1 #"("
0 0 43 3 6 #"define"
0 0 43 3 15 #" (graws->click "
0 0 43 3 1 #"a"
0 0 43 3 1 #" "
0 0 43 3 1 #"x"
0 0 43 3 1 #" "
0 0 43 3 1 #"y"
0 0 43 3 1 #" "
0 0 43 3 1 #"g"
0 0 43 3 1 #")"
0 0 43 29 1 #"\n"
0 0 43 3 3 #"  ("
0 0 43 3 4 #"cond"
0 0 43 3 3 #" [("
0 0 43 3 8 #"string=?"
0 0 43 3 32 #" g \"button-down\") (graws->gr 1)]"
0 0 43 29 1 #"\n"
0 0 43 3 9 #"        ["
0 0 43 3 4 #"else"
0 0 43 3 5 #" a]))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 23 3 1 #" "
0 0 43 3 1 #"1"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 10 #"graws->ima"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 9 #"graws->gr"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"          ("
0 0 14 3 8 #"on-mouse"
0 0 23 3 1 #" "
0 0 14 3 12 #"graws->click"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 11 #"           "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"     "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"        "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0           0           0 0           0 19 0 50 3 11 #"Welcome to "
0 0 52 3 8 #"DrRacket"
0 0 50 3 21 #", version 5.3.6 [3m]."
0 0 50 29 1 #"\n"
0 0 50 3 10 #"Language: "
0 0 53 3 17 #"Beginning Student"
0 0 50 3 16 #"; memory limit: "
0 0 53 3 6 #"128 MB"
0 0 50 3 1 #"."
0 0 50 29 1 #"\n"
0 6          10 10 8 #"2891/30\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 10 29 1 #"\n"
0 0 10 3 2 #"41"
0 0 10 29 1 #"\n"
0 0 10 3 2 #"35"
0 0 10 29 1 #"\n"
0 0 6 3 20 #"All 18 tests passed!"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"> "
0           0
